<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Code Clean on Shubo Zhang</title><link>https://shubozhang.github.io/posts/software-design-and-engineering/clean-code/</link><description>Recent content in Code Clean on Shubo Zhang</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 16 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://shubozhang.github.io/posts/software-design-and-engineering/clean-code/index.xml" rel="self" type="application/rss+xml"/><item><title>Meaningful Names</title><link>https://shubozhang.github.io/posts/software-design-and-engineering/clean-code/01-meaningful-names/</link><pubDate>Sat, 16 Jan 2021 00:00:00 +0000</pubDate><guid>https://shubozhang.github.io/posts/software-design-and-engineering/clean-code/01-meaningful-names/</guid><description>Use Intention-Revealing Names The name of a variable, function, or class, should answer all the big questions. It should tell you
why it exists what it does how it is used. Bad example: If a name requires a comment, then the name does not reveal its intent.
int d; // elapsed time in days The name d reveals nothing. It does not evoke a sense of elapsed time, nor of days.</description></item></channel></rss>